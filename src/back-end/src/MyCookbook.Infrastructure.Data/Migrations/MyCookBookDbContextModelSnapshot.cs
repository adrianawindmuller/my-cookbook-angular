// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCookbook.Infrastructure.Data.DbContexts;

namespace MyCookbook.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MyCookBookDbContext))]
    partial class MyCookBookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyCookbook.Domain.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bolos"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sopas"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Carnes"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Massas"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Peixe"
                        });
                });

            modelBuilder.Entity("MyCookbook.Domain.Recipes.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ImageId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RawContent")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("ImageId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("MyCookbook.Domain.Recipes.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecipeId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Favorite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<long>("NumberPortion")
                        .HasColumnType("bigint");

                    b.Property<string>("PreparationMode")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<long>("PreparationTimeInMinutes")
                        .HasColumnType("bigint");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("RecipeId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("MyCookbook.Domain.Recipes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MyCookbook.Domain.Recipes.Image", b =>
                {
                    b.HasOne("MyCookbook.Domain.Recipes.Recipe", null)
                        .WithMany("Images")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyCookbook.Domain.Recipes.Recipe", b =>
                {
                    b.HasOne("MyCookbook.Domain.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCookbook.Domain.Recipes.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyCookbook.Domain.Recipes.Recipe", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("MyCookbook.Domain.Recipes.User", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
